<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kev's 9th blog</title><link>https://kevinan9.github.io/</link><description>Recent content on Kev's 9th blog</description><generator>Hugo -- gohugo.io</generator><copyright>© 2014-2023 Kevin A.</copyright><lastBuildDate>Fri, 07 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kevinan9.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>How to catch up my git fork to master</title><link>https://kevinan9.github.io/posts/2023-04-07-how-to-catch-up-my-git-fork-to-master/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2023-04-07-how-to-catch-up-my-git-fork-to-master/</guid><description>How to catch up my git fork to master Configuring a git remote for a fork You only need to do this once: Add a new remote upstream repository to sync with the fork where ORIGINAL_OWNER is the original GitHub account and ORIGINAL_REPOSITORY is the original repository name.
git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git For example:
git remote add upstream https://github.com/apache/thrift.git You can verify that all went well:
git remote -v origin https://github.</description></item><item><title>Installing MongoDB in Kubernetes</title><link>https://kevinan9.github.io/posts/2023-02-26-mongodb-in-k8s/</link><pubDate>Sun, 26 Feb 2023 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2023-02-26-mongodb-in-k8s/</guid><description>Installing MongoDB in Kubernetes Prerequisites This tutorial will be a hands-on demonstration. To follow along, be sure you have the following requirements:
minikube up and running
MongoDB Compass installed on the local machine.
Git installed on your machine.
jq JSON Parser installed on the local machine.
Downloading the MongoDB Kubernetes Operator Run the git command below to clone the MongoDB Kubernetes Operator project to your local machine.
git clone https://github.com/mongodb/mongodb-kubernetes-operator.git</description></item><item><title>Happy School Ski Week</title><link>https://kevinan9.github.io/posts/2023-02-22-snowboarding-with-friends/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2023-02-22-snowboarding-with-friends/</guid><description>Happy School Ski Week my girl.
I&amp;rsquo;m really happy for you, my love(s).</description></item><item><title>Happy Valentine's Day, My Love</title><link>https://kevinan9.github.io/posts/2023-02-14-happy-valentines-day-my-love/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2023-02-14-happy-valentines-day-my-love/</guid><description>Today is Valentine&amp;rsquo;s Day.
I am happy after got acupuncture treatment. Wife is happy because of these beautiful tulips.
Daughter is happy because of these candy grams. I&amp;rsquo;m really happy for you, my love(s).</description></item><item><title>DDS™: A Server Gameplay Module for Open-world MMO Games</title><link>https://kevinan9.github.io/posts/2023-01-12-dds/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2023-01-12-dds/</guid><description>OVERVIEW In order to enable game creators to build rich, large-scale multiplayer experiences where hundreds or even thousands of players can play together in new and dynamic virtual worlds, DDS is designed to be a networking module built for scale built to handle low-latency, high-volume, high-throughput data replication. It runs multiplayer networking as a separate server-side process, scaling to hundreds of millions of interactions a second – enabling thousands of players to join a single virtual world with increased levels of simulated content.</description></item><item><title>Deploying Spinnaker in A Kubernetes Cluster</title><link>https://kevinan9.github.io/posts/2022-12-12-spinnaker/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2022-12-12-spinnaker/</guid><description>Deploying Spinnaker in a Kubernetes cluster Pre-requisites Kubernetes cluster with atleast 4 cores and 12GB memory
Start Halyard in a new Docker container on your current machine. mkdir ~/.hal mkdir ~/.kube docker run -p 8084:8084 -p 9000:9000 \ --name halyard --rm \ -v ~/.hal:/home/spinnaker/.hal \ -v ~/.kube:/home/spinnaker/.kube \ -d \ us-docker.pkg.dev/spinnaker-community/docker/halyard:stable Note: If you install Halyard in a Docker container, you will need to manually change permissions on the mounted ~/.</description></item><item><title>Sketching - Brendan Fraser</title><link>https://kevinan9.github.io/posts/2022-12-01-sketching/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2022-12-01-sketching/</guid><description/></item><item><title>2023 New Year Resolution</title><link>https://kevinan9.github.io/posts/2023-01-01-new-year-resolution/</link><pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2023-01-01-new-year-resolution/</guid><description/></item><item><title>Sketching - Unknown</title><link>https://kevinan9.github.io/posts/2022-03-17-sketching/</link><pubDate>Thu, 17 Mar 2022 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2022-03-17-sketching/</guid><description/></item><item><title>Where I’m From</title><link>https://kevinan9.github.io/posts/2019-01-10-where-im-from/</link><pubDate>Thu, 10 Jan 2019 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2019-01-10-where-im-from/</guid><description>I am from old fashion sewing machine,
from an aged bicycle and an old popsicle.
I am from the brand new muddy house, small, warm, not enough room to live.
I am from the tall green elm tree that I fell out of, but luckily I am still alive.
I’m from the Mah-jongg game at every single new year eve and crafty veterans of it.
From Loong and YuZhou.
I&amp;rsquo;m constantly moving from one place to another and back.</description></item><item><title>strstr in c</title><link>https://kevinan9.github.io/posts/2015-07-14-strstr/</link><pubDate>Tue, 14 Jul 2015 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2015-07-14-strstr/</guid><description>Source Code #include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;string.h&amp;gt; #define NOTFOUND -1 int my_strstr(const char * s1, const char * s2) { const char * p = s1; do { if (*p == *s2) { /* match first char */ const char * p1 = p; const char * p2 = s2; do { if (!*p2) /* FOUND */ return p - s1; if (!*p1) return NOTFOUND; } while (*p1++ == *p2++); } } while(*p++); return NOTFOUND; } int main(int argc, char ** argv) { char s1[] = &amp;#34;skldjfwioeuwetewtsdfsdf&amp;#34;; char s2[] = &amp;#34;sdfsdf&amp;#34;; int pos = my_strstr(s1, s2); if (pos &amp;gt;= 0) { printf(&amp;#34;found:%d\n&amp;#34;, pos); } else printf(&amp;#34;not found!</description></item><item><title>Classical Quick Sort Algorithm</title><link>https://kevinan9.github.io/posts/2015-07-12-quick-sort-in-c/</link><pubDate>Sun, 12 Jul 2015 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2015-07-12-quick-sort-in-c/</guid><description>Analysis Acctually Quick Sort is hard to write code directly according to that definition. We need more practical way, e.g. partition can be merged into sorting process.
Source Code /* ** @file $RCSfile: qsort.c,v $ ** quick sort ** @author $Author: Kevin $ ** @date $Date: 2015/07/12 23:02:41 $ ** @version $Revision: 0.01 $ ** @note Editor: Vim 6, Gcc 4.4.6, tab=4 ** @note Platform: CentOS release 6.3 (Final) */ #include &amp;lt;stdio.</description></item><item><title>Adding Two Unlimited Integers</title><link>https://kevinan9.github.io/posts/2015-07-11-adding-two-unlimited-integers/</link><pubDate>Sat, 11 Jul 2015 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2015-07-11-adding-two-unlimited-integers/</guid><description>Coding Interview Question 01 Implement the following function in C/C++. Arguments X and Y are pointers to null-terminated strings containing non-negative base-10 whole numbers of unlimited size/length. Allocate and return a string containing the base-10 representation of the sum of X and Y. (Leading zeros in the output are fine.)
function prototype: char *AddAsciiIntegers( const char *x, const char *y );
Analysis First how would you use this function? maybe like this:</description></item><item><title>Find Median Value</title><link>https://kevinan9.github.io/posts/2015-07-11-find-median-value/</link><pubDate>Sat, 11 Jul 2015 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/posts/2015-07-11-find-median-value/</guid><description>Coding Interview Question 02 Write a C/C++ program that calls rand() 1,000,000 times and finds the median value Analysis First we need define &amp;lsquo;Median&amp;rsquo; clearly: Median
&amp;hellip; If n is odd then Median (M) = value of ((n + 1)/2)th item term.
If n is even then Median (M) = value of [((n)/2)th item term + ((n)/2 + 1)th item term ]/2 &amp;hellip;
Source Code /* ** @file $RCSfile: q8.</description></item><item><title/><link>https://kevinan9.github.io/about/about/</link><pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate><guid>https://kevinan9.github.io/about/about/</guid><description>(Game) Server Engineer with a current focus on Golang, Kubernetes and Cloud-Native DevOps.
Experience Senior Server Engineer Tencent America · Full-time Aug 2018 - Present · 4 yrs 6 mos Greater Los Angeles Area Recently working on a seamless large-scale massively multiple player online game solution based on Unreal Engine, I&amp;rsquo;d rather not call it a &amp;lsquo;Metaverse&amp;rsquo;, cuz it&amp;rsquo;s actually not.
As a server engineer, keep working on multi-server networking solution that enables differentiating features like the blended PvP/PvE gameplay.</description></item></channel></rss>